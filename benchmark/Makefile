NOTPARALLEL:

.DEFAULT_GOAL := build

SHELL := /bin/bash

MKFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
MKFILE_DIR := $(dir $(MKFILE_PATH))
REPO_PATH=$(MKFILE_DIR)/..
PARALLEL_COUNT=$(shell nproc)

CC=clang
CXX=clang++ -std=c++17
WASI_CC=$$HOME/wasi-12/bin/clang --sysroot $$HOME/wasi-12/share/wasi-sysroot/
WASI_CXX=$$HOME/wasi-12/bin/clang++ --sysroot $$HOME/wasi-12/share/wasi-sysroot/ -std=c++17
WASI_AR=$$HOME/wasi-12/bin/ar
WASI_LD=$$HOME/wasi-12/bin/wasm-ld
WASI_CFLAGS=-I $(MKFILE_DIR)/wasmcompat
WASI_LDFLAGS=-Wl,--export-all -Wl,--no-entry -Wl,--growable-table -Wl,--stack-first -Wl,-z,stack-size=1048576
WASM2C_SRC_PATH=$(MKFILE_DIR)/wasm2c_sandbox_compiler
WASM2C_RUNTIME=$(addprefix $(WASM2C_SRC_PATH)/wasm2c/, wasm-rt-impl.c wasm-rt-os-unix.c wasm-rt-wasi.c)
WASM2C_RUNNER=$(addprefix $(WASM2C_SRC_PATH)/wasm2c/, wasm-rt-static-runner.c)

ifdef DEBUG
BUILD_TYPE_DIR=debug
BUILD_TYPE_CONFIG=Debug
BUILD_TYPE_FLAGS=-Og -g
BUILD_BINARY_FLAGS=-fsanitize=address
else
BUILD_TYPE_DIR=release
BUILD_TYPE_CONFIG=Release
BUILD_TYPE_FLAGS=-O3
BUILD_BINARY_FLAGS=
endif

LIBJPEG_INCLUDES=-I$(REPO_PATH)/ -I$(REPO_PATH)/build_$(BUILD_TYPE_DIR)
LIBJPEG_LINK=$(REPO_PATH)/build_$(BUILD_TYPE_DIR)/libjpeg.a
LIBJPEG_WASM_INCLUDES=-I$(REPO_PATH)/ -I$(REPO_PATH)/build_wasm$(BUILD_TYPE_DIR)
LIBJPEG_WASM_LINK=-Wl,--whole-archive $(REPO_PATH)/build_wasm$(BUILD_TYPE_DIR)/libjpeg.a -Wl,--no-whole-archive
RLBOX_INCLUDES=-I $(MKFILE_DIR)/rlbox/code/include -I $(MKFILE_DIR)/rlbox_wasm2c_sandbox/include
RLBOX_LINK=-lrt
WASM2C_BUILD_INCLUDES=-I $(WASM2C_SRC_PATH)/wasm2c -I$(REPO_PATH)/build_wasm$(BUILD_TYPE_DIR)/

test_out.jpeg: test.jpeg ../build_$(BUILD_TYPE_DIR)
	$(CC) -O0 -g generate_test_out.c -o ./generate_test_out $(LIBJPEG_INCLUDES) $(LIBJPEG_LINK)
	./generate_test_out test.jpeg test_out.jpeg

test_bytes.h: test.jpeg test_out.jpeg
	echo "unsigned char inputData[] = {" > $@
	hexdump -ve '1/1 "0x%.2x, "' test.jpeg >> $@
	echo "0x00 };" >> $@
	echo "unsigned char outputData[] = {" >> $@
	hexdump -ve '1/1 "0x%.2x, "' test_out.jpeg >> $@
	echo "0x00 };" >> $@

#####################################

../build_$(BUILD_TYPE_DIR):
	cmake -S ../ -B $@ -DCMAKE_BUILD_TYPE=$(BUILD_TYPE_CONFIG)
	cd $@ && make -j$(PARALLEL_COUNT)

../build_$(BUILD_TYPE_DIR)/image_change_quality: image_change_quality.cpp ../build_$(BUILD_TYPE_DIR)
	$(CXX) $(BUILD_TYPE_FLAGS) $(BUILD_BINARY_FLAGS) -o $@ $< $(LIBJPEG_INCLUDES) $(LIBJPEG_LINK)

#####################################

rlbox:
	git clone git@github.com:PLSysSec/rlbox.git

../build_$(BUILD_TYPE_DIR)/image_change_quality_rlbox_noop: image_change_quality_rlbox.cpp rlbox ../build_$(BUILD_TYPE_DIR)
	$(CXX) $(BUILD_TYPE_FLAGS) $(BUILD_BINARY_FLAGS) -o $@ $< $(LIBJPEG_INCLUDES) $(RLBOX_INCLUDES) $(LIBJPEG_LINK) $(RLBOX_LINK)

#####################################

wasm2c_sandbox_compiler:
	git clone --recursive git@github.com:PLSysSec/wasm2c_sandbox_compiler.git

wasm2c_sandbox_compiler/build_$(BUILD_TYPE_DIR): wasm2c_sandbox_compiler
	cmake -S ./wasm2c_sandbox_compiler -B $@ -DCMAKE_BUILD_TYPE=$(BUILD_TYPE_CONFIG)
	cd $@ && make -j$(PARALLEL_COUNT)

../build_wasm$(BUILD_TYPE_DIR): wasm2c_sandbox_compiler/build_$(BUILD_TYPE_DIR)
	CC="$(WASI_CC)" CFLAGS="$(WASI_CFLAGS)" LDFLAGS="$(WASI_LDFLAGS)" \
		CXX="$(WASI_CXX)" CXXFLAGS="$(WASI_CFLAGS)" LDFLAGS="$(WASI_LDFLAGS)" \
		AR="$(WASI_AR)" LD="$(WASI_LD)" \
		cmake -S ../ -B $@ -DCMAKE_BUILD_TYPE=$(BUILD_TYPE_CONFIG) -DENABLE_SHARED=OFF -DWITH_SIMD=OFF
	cd $@ && make -j$(PARALLEL_COUNT)
	$(WASI_CC) $(BUILD_TYPE_FLAGS) $(WASI_CFLAGS) $(WASI_LDFLAGS) -o ../build_wasm$(BUILD_TYPE_DIR)/libjpeg.wasm ./rlbox_wasm2c_sandbox/c_src/wasm2c_sandbox_wrapper.c $(LIBJPEG_WASM_LINK)
	$(WASM2C_SRC_PATH)/build_$(BUILD_TYPE_DIR)/wasm2c ../build_wasm$(BUILD_TYPE_DIR)/libjpeg.wasm -o ../build_wasm$(BUILD_TYPE_DIR)/libjpeg.wasm.c

../build_wasm$(BUILD_TYPE_DIR)/image_change_quality_wasm2c: image_change_quality.cpp  ../build_wasm$(BUILD_TYPE_DIR)
	$(WASI_CXX) $(BUILD_TYPE_FLAGS) $(WASI_CFLAGS) $(WASI_LDFLAGS) -o ../build_wasm$(BUILD_TYPE_DIR)/$@.wasm $< $(LIBJPEG_WASM_INCLUDES) $(LIBJPEG_WASM_LINK)
	$(WASM2C_SRC_PATH)/build_$(BUILD_TYPE_DIR)/wasm2c ../build_wasm$(BUILD_TYPE_DIR)/$@.wasm -o ../build_wasm$(BUILD_TYPE_DIR)/$@.wasm.c
	$(CC) $(BUILD_TYPE_FLAGS) $(BUILD_BINARY_FLAGS) -o $@ $(WASM2C_RUNTIME) $(WASM2C_RUNNER) ../build_wasm$(BUILD_TYPE_DIR)/$@.wasm.c $(WASM2C_BUILD_INCLUDES)

#####################################

rlbox_wasm2c_sandbox:
	git clone --recursive git@github.com:PLSysSec/rlbox_wasm2c_sandbox.git

../build_wasm$(BUILD_TYPE_DIR)/image_change_quality_rlbox_wasm2c: image_change_quality_rlbox.cpp rlbox rlbox_wasm2c_sandbox ../build_wasm$(BUILD_TYPE_DIR)
	rm -rf ../build_wasm$(BUILD_TYPE_DIR)/objs
	mkdir -p ../build_wasm$(BUILD_TYPE_DIR)/objs
	cd ../build_wasm$(BUILD_TYPE_DIR)/objs && \
		$(CC) $(BUILD_TYPE_FLAGS) $(BUILD_BINARY_FLAGS) $(WASM2C_RUNTIME) $(REPO_PATH)/build_wasm$(BUILD_TYPE_DIR)/libjpeg.wasm.c -c $(WASM2C_BUILD_INCLUDES)
	$(CXX) $(BUILD_TYPE_FLAGS) $(BUILD_BINARY_FLAGS) ../build_wasm$(BUILD_TYPE_DIR)/objs/*.o -o $@ $< -DRLBOX_WASM2C $(LIBJPEG_INCLUDES) $(WASM2C_BUILD_INCLUDES) $(RLBOX_INCLUDES) $(LIBJPEG_LINK) $(RLBOX_LINK)

#####################################

build: test_bytes.h ../build_$(BUILD_TYPE_DIR)/image_change_quality ../build_$(BUILD_TYPE_DIR)/image_change_quality_rlbox_noop ../build_wasm$(BUILD_TYPE_DIR)/image_change_quality_wasm2c ../build_wasm$(BUILD_TYPE_DIR)/image_change_quality_rlbox_wasm2c

test:
	../build_$(BUILD_TYPE_DIR)/image_change_quality
	../build_$(BUILD_TYPE_DIR)/image_change_quality_rlbox_noop
	../build_wasm$(BUILD_TYPE_DIR)/image_change_quality_wasm2c
	../build_wasm$(BUILD_TYPE_DIR)/image_change_quality_rlbox_wasm2c

clean:
	rm -f test_out.jpeg
	rm -f test_bytes.h
	rm -rf ../build_*/
	rm -rf ./wasm2c_sandbox_compiler/build_*
